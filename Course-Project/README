* My Achievements 应用启动:
    进入到本应用文件夹主目录之后执行以下操作
    1. 安装依赖: npm install
    2. 创建存储数据库文件的文件夹: mkdir data
    3. 启动数据库: mongod -dbpath ./data
    4. 启动服务器: node server.js
* My Achievements 应用完成情况:
    1. 发布作业(已完成)
    2. 查看作业，提交作业(已完成)
    3. 学生互评(已完成)
    4. TA评审(已完成)
    5. 学生修改提交(已完成)
    6. 教师查看作业情况(已完成)
    7. 教师判定分数(已完成)
    8. 学生查看结果，包括查看自己所有以往作业情况(已完成)
* 特别说明:
    1. 本应用使用MEAN开发，已实现SPA，页面切换时增加了动画效果
    2. 网站不同权限的用户对应不同的页面，做了权限限定，所以即便是网站管理员(教师)也无法进入更低权限的学生或者助教的页面
    3. 部分UI可能与现有作业系统不一致，不过还是尽力以简洁为主，不够时间修改
    4. 学生互评已实现小组间的随机互评，采取的方法是: [1,2,3,4,5]随机打乱顺序之后[5,1,3,2,4]，第5组评第1组，第1组评第3组，以此类推最后第4组评第5组，可能与现有作业系统的实现方法不一致，不过亦能实现要求的功能
    5. TA和教师页面比较粗糙简陋
    6. 学生修改提交的方式为再次提交覆盖以前的提交记录
    7. 教师可以查看作业情况并确认分数，在查看作业完成情况的页面我增加了排名按钮，对全班的成绩进行排名这里我没有实现为自动的，感觉不好控制，还是弄成手动的便于等所有TA评分完成后再由老师按下排名。排名这里还有一点小缺陷就是同分的情况没有做适当的处理，比如[99,100, 99]排出来的名次是[2,1,3]
    8. 学生页面的折线图可以显示学生作业的完成情况，也可以通过点击评审进入评审页查看作业的给分情况
    9. 本应用预设了一个管理员账号，即教师账号，学生和助教的信息由管理员进行录入。这里为了方便测试，我在管理员界面增加了一键添加助教和一键添加学生的功能，请TA测试时先登录管理员账号然后在管理员页面的学生信息和助教信息页点击添加按钮，然后等待信息录入完毕再开始测试。这里为了避免账号太多带来测试的麻烦，我在一键添加的功能里只会创建2个TA账号和10个学生账号，10个学生账号分为5个小组，每组2人。在实际应用中只需将教师端的录入方式稍作修改，不影响功能。
    10. 账号信息如下：由于没有中文姓名，所以姓名我都用学生000，学生001，学生002...的方式代替。
    助教: 13330000, 13330001
    学生: 14330000, 14330001, ..., 14330009
    助教和学生账号密码均为他们的学号，助教000负责第1,2,3组，助教001负责第4,5组
    管理员(教师)账号: wangqing
    管理员(教师)密码: 12345678
    11. 建议测试时先进入管理员界面添加学生助教并发布一两个作业，再依次登陆10个学生账号去提交作业，之后再去互评，然后再登陆TA账号给学生评分，最后才是教师查看作业完成情况并判定分数并进行排名。以上只是建议，按这个顺序比较便于测试者测试本应用的功能。互评时若对方还未提交作业则页面上会空白，助教评审时若所负责的小组还未提交作业则页面会空白。
    12. 作业的时间限定没能来得及做成自动判定，为了能够进行时间限定我在管理员页面的作业信息那里增加了一个显示作业状态的按钮，点击此按钮时可以切换作业的状态(即未开始->正在进行->已结束)，由此来限定作业的提交时间。所以这里在发布作业时填写的时间信息就当做给学生做参考，实际操作中还是要由管理员去进行灵活调整。学生页面只有在作业处于正在进行时才会显示提交作业的通道，所以测试时在管理员发布作业后记得调节作业状态。
    13. 默认TA和教师评分功能不受作业时间的影响，作业时间只用来限制学生的作业提交。